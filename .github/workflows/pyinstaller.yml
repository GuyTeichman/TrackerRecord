name: Pyinstaller Release

on:
    push:
        tags:
            - 'V*' #
    workflow_dispatch:

env:
    HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1

jobs:

    createrelease:
        name: Create Release
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.VID_CHECKSUM_PAT }}
                  persist-credentials: true

            - name: Install dev requirements
              run: python -m pip install --upgrade -r requirements_dev.txt

            - name: Generate Changelog
              run: python packaging/generate_changelog.py


            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Stable release ${{ github.ref_name }}
                  body_path: rnalysis/data_files/latest_changelog.md
                  draft: false
                  prerelease: false

            - name: Output Release URL File
              run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt

            - name: Save Release URL File for publish
              uses: actions/upload-artifact@v4
              with:
                  name: release_url
                  path: release_url.txt

    build:
        name: Build packages
        needs: createrelease
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - os: macos-latest
                      TARGET: macos-M1
                      CMD_BUILD: >
                          pyinstaller TrackerRecord.spec &&
                          cd dist/ &&
                          zip -r TrackerRecord-1.0.0_macos_M1.zip ./TrackerRecord* &&
                          ls -ltr
                      OUT_FILE_NAME: TrackerRecord-1.0.0_macos_M1.zip
                      ASSET_MIME: application/zip

                    - os: windows-latest
                      TARGET: windows
                      CMD_BUILD: >
                          pyinstaller TrackerRecord.spec &&
                          cd dist/ &&
                          7z a TrackerRecord-1.0.0_windows.zip -r "TrackerRecord-1.0.0/"
                      OUT_FILE_NAME: TrackerRecord-1.0.0_windows.zip
                      ASSET_MIME: application/zip

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: command line tools on MacOS
              if: runner.os == 'macOS'
              run: |
                  gcc -v -xc++ /dev/null -fsyntax-only

            - name: Set up Python 3.11
              uses: actions/setup-python@v4
              with:
                  python-version: 3.11
                  cache: 'pip'

            - name: Install PyInstaller requirements
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install --upgrade -r requirements_pyinstaller.txt

            - name: Install dependencies
              run: python -m pip install .[all]

            - name: Build with pyinstaller for ${{ matrix.TARGET }}
              run: ${{ matrix.CMD_BUILD }}

            - name: Load Release URL File from release job
              uses: actions/download-artifact@v4
              with:
                  name: release_url
                  path: release_url

            - name: Get Release File Name & Upload URL
              id: get_release_info
              run: |
                  value=$(cat release_url/release_url.txt)
                  echo "UPLOAD_URL=$value" >> $GITHUB_ENV
              shell: bash
            - name: Upload Release Asset
              id: upload-release-asset
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  files: ./dist/${{ matrix.OUT_FILE_NAME }}
